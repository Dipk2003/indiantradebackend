# AWS Elastic Beanstalk Environment Variables Configuration
# Copy these environment variables to your Elastic Beanstalk environment configuration
# DO NOT commit this file with actual values to version control

# =============================================================================
# CORE APPLICATION CONFIGURATION
# =============================================================================
SPRING_PROFILES_ACTIVE=production
PORT=8080
SERVER_PORT=8080

# =============================================================================
# DATABASE CONFIGURATION (AWS RDS)
# =============================================================================
# Replace with your actual RDS endpoint and credentials
DATABASE_URL=jdbc:postgresql://your-rds-endpoint.region.rds.amazonaws.com:5432/itech_db
JDBC_DATABASE_USERNAME=postgres
JDBC_DATABASE_PASSWORD=your-secure-database-password

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Generate a secure JWT secret (minimum 256 bits)
JWT_SECRET=your-very-long-and-secure-jwt-secret-key-here-minimum-512-characters-recommended
JWT_EXPIRATION=86400000

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Add your actual frontend domains
ALLOWED_ORIGINS=https://your-frontend-domain.com,https://www.your-frontend-domain.com,https://your-admin-panel.com

# =============================================================================
# EMAIL CONFIGURATION (GMAIL SMTP)
# =============================================================================
SPRING_MAIL_HOST=smtp.gmail.com
SPRING_MAIL_PORT=587
SPRING_MAIL_USERNAME=your-email@yourdomain.com
SPRING_MAIL_PASSWORD=your-gmail-app-specific-password
SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED=true

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
EMAIL_SIMULATION_ENABLED=false
SMS_SIMULATION_ENABLED=false
GST_MANAGEMENT_ENABLED=true
GST_VALIDATION_ENABLED=true

# =============================================================================
# SMS CONFIGURATION (TWILIO)
# =============================================================================
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# Alternative SMS providers (if using)
TEXTLOCAL_API_KEY=your-textlocal-api-key
MSG91_API_KEY=your-msg91-api-key
MSG91_TEMPLATE_ID=your-msg91-template-id

# =============================================================================
# PAYMENT GATEWAY CONFIGURATION (RAZORPAY)
# =============================================================================
RAZORPAY_KEY_ID=your-razorpay-key-id
RAZORPAY_KEY_SECRET=your-razorpay-key-secret
RAZORPAY_WEBHOOK_SECRET=your-razorpay-webhook-secret

# =============================================================================
# EXTERNAL API VERIFICATION
# =============================================================================
# GST Verification API
GST_VERIFICATION_ENABLED=true
GST_API_URL=https://api.gst-verification.com
GST_API_KEY=your-gst-verification-api-key

# PAN Verification API
PAN_VERIFICATION_ENABLED=true
PAN_API_URL=https://api.pan-verification.com
PAN_API_KEY=your-pan-verification-api-key

# =============================================================================
# AWS S3 CONFIGURATION
# =============================================================================
CLOUD_STORAGE_ENABLED=true
AWS_S3_BUCKET_NAME=your-s3-bucket-name
AWS_S3_REGION=us-east-1
# Note: AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY should be set via IAM roles for EC2

# =============================================================================
# QUICKO API CONFIGURATION
# =============================================================================
QUICKO_API_BASE_URL=https://api.quicko.com
QUICKO_API_KEY=your-quicko-api-key
QUICKO_API_ENABLED=true
QUICKO_API_TIMEOUT=30
QUICKO_API_RETRY_ATTEMPTS=3
QUICKO_API_RETRY_DELAY=1000

# =============================================================================
# OPENAI CONFIGURATION
# =============================================================================
OPENAI_API_KEY=your-openai-api-key

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_COM_ITECH=DEBUG
LOGGING_LEVEL_SPRING_SECURITY=INFO
LOGGING_LEVEL_SPRING_WEB=INFO

# =============================================================================
# MONITORING AND DEBUGGING
# =============================================================================
MAIL_DEBUG=false

# =============================================================================
# DEPLOYMENT INSTRUCTIONS
# =============================================================================
# 1. Create an AWS RDS PostgreSQL database
# 2. Create an S3 bucket for file storage
# 3. Set up IAM roles for EC2 instances to access S3 and RDS
# 4. Configure these environment variables in your Elastic Beanstalk environment
# 5. Deploy the JAR file (itech-backend-0.0.1-SNAPSHOT.jar) to Elastic Beanstalk
# 
# Security Notes:
# - Never commit actual secrets to version control
# - Use AWS Secrets Manager or Parameter Store for sensitive data in production
# - Ensure your RDS security group allows connections from your EB environment
# - Use HTTPS for all external communications
