# =============================================================================
# iTech Backend - Local Development Configuration (MySQL Workbench)
# =============================================================================
# This profile is for LOCAL DEVELOPMENT using MySQL Workbench
# Activate this profile by setting: spring.profiles.active=local

spring.application.name=itech-backend

# =============================================================================
# DATABASE CONFIGURATION (LOCAL MYSQL)
# =============================================================================
# MySQL Database Configuration for local development
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/itech_db?useSSL=false&serverTimezone=Asia/Kolkata&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true}
spring.datasource.username=${JDBC_DATABASE_USERNAME:root}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# =============================================================================
# JPA & HIBERNATE SETTINGS (MYSQL)
# =============================================================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Kolkata
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
server.port=${PORT:8080}
server.servlet.context-path=/

# =============================================================================
# CORS CONFIGURATION (Allow Frontend)
# =============================================================================
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
jwt.secret=${JWT_SECRET:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0}
jwt.expiration-in-ms=${JWT_EXPIRATION:86400000}

# =============================================================================
# EMAIL CONFIGURATION (LOCAL TESTING)
# =============================================================================
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED:true}
spring.mail.properties.mail.smtp.ssl.protocols=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_PROTOCOLS:TLSv1.2}
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Email and SMS simulation for local testing
email.simulation.enabled=${EMAIL_SIMULATION_ENABLED:true}
sms.simulation.enabled=${SMS_SIMULATION_ENABLED:true}

# GST Management
gst.management.enabled=${GST_MANAGEMENT_ENABLED:true}
gst.default.rates=0,5,12,18,28
gst.validation.enabled=${GST_VALIDATION_ENABLED:false}

# =============================================================================
# EXTERNAL API CONFIGURATION (DISABLED FOR LOCAL)
# =============================================================================
# GST Verification (disabled for local)
gst.verification.enabled=${GST_VERIFICATION_ENABLED:false}
gst.api.url=${GST_API_URL:}
gst.api.key=${GST_API_KEY:}

# PAN Verification (disabled for local)
pan.verification.enabled=${PAN_VERIFICATION_ENABLED:false}
pan.api.url=${PAN_API_URL:}
pan.api.key=${PAN_API_KEY:}

# =============================================================================
# PAYMENT GATEWAY (RAZORPAY TEST)
# =============================================================================
razorpay.key.id=${RAZORPAY_KEY_ID:rzp_test_your_key_id}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:your_razorpay_key_secret}
razorpay.webhook.secret=${RAZORPAY_WEBHOOK_SECRET:your_webhook_secret}
razorpay.currency=INR

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload.directory=uploads
file.upload.max-size=10485760

# Image Processing
image.upload.allowed-extensions=jpg,jpeg,png,gif,webp
image.max-width=1920
image.max-height=1080
image.thumbnail.width=300
image.thumbnail.height=300

# =============================================================================
# CLOUD STORAGE (DISABLED FOR LOCAL)
# =============================================================================
cloud.storage.enabled=${CLOUD_STORAGE_ENABLED:false}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:}
aws.s3.region=${AWS_S3_REGION:}
aws.s3.access-key=${AWS_ACCESS_KEY_ID:}
aws.s3.secret-key=${AWS_SECRET_ACCESS_KEY:}

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
logging.level.com.itech.itech_backend=${LOGGING_LEVEL_COM_ITECH:DEBUG}
logging.level.org.springframework.security=${LOGGING_LEVEL_SPRING_SECURITY:DEBUG}
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}

# =============================================================================
# ACTUATOR ENDPOINTS
# =============================================================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# =============================================================================
# DEVELOPMENT FEATURES
# =============================================================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# =============================================================================
# OPENAI CONFIGURATION (OPTIONAL)
# =============================================================================
openai.api.key=${OPENAI_API_KEY:your-openai-api-key-here}
openai.api.url=https://api.openai.com/v1/chat/completions
