openapi: 3.0.3
info:
  title: ITech B2B Platform API
  description: |
    API documentation for the ITech B2B Platform. This platform connects buyers and sellers in the B2B marketplace,
    providing features for product listing, order management, vendor verification, and more.
  version: 1.0.0
  contact:
    name: ITech Support
    email: support@itech.com
  license:
    name: Proprietary
    url: https://www.itech.com/license

servers:
  - url: https://api.itech.com/v1
    description: Production server
  - url: https://staging-api.itech.com/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Local development

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        path:
          type: string

    ValidationError:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        errors:
          type: object
          additionalProperties:
            type: string

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
        remember:
          type: boolean
          default: false

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [ADMIN, VENDOR, BUYER, EMPLOYEE]
        status:
          type: string
          enum: [ACTIVE, INACTIVE, SUSPENDED]
        createdAt:
          type: string
          format: date-time
        lastLoginAt:
          type: string
          format: date-time

    Product:
      type: object
      required:
        - name
        - price
        - category
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
        images:
          type: array
          items:
            type: string
        stockQuantity:
          type: integer
        vendorId:
          type: string
        specifications:
          type: object
          additionalProperties:
            type: string
        status:
          type: string
          enum: [ACTIVE, INACTIVE, OUT_OF_STOCK]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Order:
      type: object
      properties:
        id:
          type: string
        buyerId:
          type: string
        vendorId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalAmount:
          type: number
          format: double
        status:
          type: string
          enum: [PENDING, CONFIRMED, SHIPPED, DELIVERED, CANCELLED]
        paymentStatus:
          type: string
          enum: [PENDING, PAID, FAILED, REFUNDED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
        unitPrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user and get access token
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /products:
    get:
      tags:
        - Products
      summary: List products
      description: Get a list of products with optional filters
      operationId: listProducts
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: number
        - name: maxPrice
          in: query
          schema:
            type: number
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer
      security:
        - bearerAuth: []

    post:
      tags:
        - Products
      summary: Create product
      description: Create a new product (Vendor only)
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  /orders:
    post:
      tags:
        - Orders
      summary: Create order
      description: Create a new order (Buyer only)
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

    get:
      tags:
        - Orders
      summary: List orders
      description: Get list of orders for the current user
      operationId: listOrders
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, CONFIRMED, SHIPPED, DELIVERED, CANCELLED]
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: Authentication operations
  - name: Products
    description: Product management operations
  - name: Orders
    description: Order management operations
