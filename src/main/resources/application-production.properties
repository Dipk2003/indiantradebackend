

# Server Configuration
server.port=${PORT:8080}
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# Database Configuration (Production)
# The DataSource will be configured by RenderDataSourceConfig for render profile
# or DatabaseConfig for other profiles

# JPA Settings (Production)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# Hibernate will auto-detect dialect based on database URL
spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
# PostgreSQL specific settings
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.properties.hibernate.implicit_naming_strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl

# Flyway Configuration - Disabled for initial deployment
spring.flyway.enabled=false
# spring.flyway.locations=classpath:db/migration
# spring.flyway.baseline-on-migrate=true
# spring.flyway.validate-on-migrate=true

# JWT Configuration (Production)
jwt.secret=${JWT_SECRET:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0}
jwt.expiration-in-ms=${JWT_EXPIRATION:86400000}

# CORS Configuration (Production)
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:https://itm-main-fronted-c4l8.vercel.app,https://www.itm-main-fronted-c4l8.vercel.app,http://localhost:3000,https://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging Configuration (Production)
logging.level.com.itech.itech_backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log file configuration
logging.file.name=logs/itech-backend.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration (Production)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator
management.security.enabled=true

# Email Configuration (Production)
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:kyc@indiantrademart.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:tqvipqgkpnxyuefk}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED:true}
spring.mail.properties.mail.smtp.ssl.protocols=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_PROTOCOLS:TLSv1.2}
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# Email simulation settings
email.simulation.enabled=${EMAIL_SIMULATION_ENABLED:false}
sms.simulation.enabled=${SMS_SIMULATION_ENABLED:true}

# SMS Configuration (Production)
twilio.account.sid=${TWILIO_ACCOUNT_SID:your_account_sid}
twilio.auth.token=${TWILIO_AUTH_TOKEN:your_auth_token}
twilio.phone.number=${TWILIO_PHONE_NUMBER:+1234567890}

# Alternative SMS Configuration (for Indian providers)
msg91.api.key=${MSG91_API_KEY:your_msg91_api_key}
msg91.template.id=${MSG91_TEMPLATE_ID:your_template_id}
textlocal.api.key=${TEXTLOCAL_API_KEY:your_textlocal_api_key}

# Quicko API Configuration (Production)
quicko.api.base-url=${QUICKO_API_BASE_URL:https://api.quicko.com}
quicko.api.key=${QUICKO_API_KEY:}
quicko.api.enabled=${QUICKO_API_ENABLED:true}
quicko.api.timeout=${QUICKO_API_TIMEOUT:30}
quicko.api.retry.max-attempts=${QUICKO_API_RETRY_ATTEMPTS:3}
quicko.api.retry.delay=${QUICKO_API_RETRY_DELAY:1000}

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Performance Settings - Disable caching for now to avoid complex setup
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Application Info
info.app.name=iTech Backend - Quicko Integration
info.app.description=Vendor Dashboard with Quicko API Integration
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@
