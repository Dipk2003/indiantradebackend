# =============================================================================
# iTech Backend - Production Environment Configuration
# =============================================================================
# This file contains production-specific configurations
# IMPORTANT: Override sensitive values with environment variables
# =============================================================================

# =============================================================================
# DATABASE CONFIGURATION - PRODUCTION
# =============================================================================
# Use environment variables for security in production
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/itech_prod_db?useSSL=true&requireSSL=true&serverTimezone=Asia/Kolkata}
spring.datasource.username=${DB_USERNAME:itech_user}
spring.datasource.password=${DB_PASSWORD:change_this_password_in_production}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =============================================================================
# JPA & HIBERNATE CONFIGURATION - PRODUCTION
# =============================================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false

# =============================================================================
# CONNECTION POOL CONFIGURATION - PRODUCTION
# =============================================================================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.pool-name=iTech-HikariCP

# =============================================================================
# CORS CONFIGURATION - PRODUCTION
# =============================================================================
# Restrict to your actual domain in production
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com,https://app.yourdomain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# =============================================================================
# LOGGING CONFIGURATION - PRODUCTION
# =============================================================================
logging.level.com.itech.itech_backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.root=WARN

# File logging for production
logging.file.name=logs/itech-backend.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n

# =============================================================================
# ACTUATOR CONFIGURATION - PRODUCTION
# =============================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator
management.endpoint.shutdown.enabled=false

# =============================================================================
# SECURITY CONFIGURATION - PRODUCTION
# =============================================================================
spring.security.require-ssl=true
security.csrf.enabled=true
security.content-type.nosniff=true
security.frame.options=DENY
security.xss.protection=true
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=PKCS12

# =============================================================================
# FILE UPLOAD CONFIGURATION - PRODUCTION
# =============================================================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload.directory=${FILE_UPLOAD_DIR:/var/itech/uploads}
file.upload.max-size=10485760

# =============================================================================
# JWT CONFIGURATION - PRODUCTION
# =============================================================================
# IMPORTANT: Change these in production with strong secrets
jwt.secret=${JWT_SECRET:CHANGE_THIS_SECRET_IN_PRODUCTION_MIN_256_BITS_REQUIRED}
jwt.expiration-in-ms=${JWT_EXPIRATION:3600000}
jwt.refresh-expiration-in-ms=${JWT_REFRESH_EXPIRATION:86400000}

# =============================================================================
# REDIS CONFIGURATION - PRODUCTION
# =============================================================================
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=2000ms
spring.redis.ssl=${REDIS_SSL:false}
spring.cache.redis.time-to-live=600000

# =============================================================================
# EMAIL CONFIGURATION - PRODUCTION
# =============================================================================
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME:}
spring.mail.password=${SMTP_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# =============================================================================
# EXTERNAL SERVICES - PRODUCTION
# =============================================================================
# Razorpay Production Configuration
razorpay.key.id=${RAZORPAY_KEY_ID:}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:}
razorpay.webhook.secret=${RAZORPAY_WEBHOOK_SECRET:}
razorpay.currency=INR

# GST and PAN Verification Services
gst.verification.enabled=${GST_VERIFICATION_ENABLED:true}
gst.api.url=${GST_API_URL:}
gst.api.key=${GST_API_KEY:}

pan.verification.enabled=${PAN_VERIFICATION_ENABLED:true}
pan.api.url=${PAN_API_URL:}
pan.api.key=${PAN_API_KEY:}

# SMS Services Configuration
msg91.api.key=${MSG91_API_KEY:}
msg91.template.id=${MSG91_TEMPLATE_ID:}
msg91.sender.id=${MSG91_SENDER_ID:ITMLTD}

textlocal.api.key=${TEXTLOCAL_API_KEY:}
textlocal.sender=${TEXTLOCAL_SENDER:ITMLTD}

# SMS Configuration
sms.provider.primary=${SMS_PROVIDER_PRIMARY:MSG91}
sms.provider.fallback=${SMS_PROVIDER_FALLBACK:TEXTLOCAL}
sms.max.retry.attempts=3

# =============================================================================
# PERFORMANCE CONFIGURATION - PRODUCTION
# =============================================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Kolkata

# Enable compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
server.compression.min-response-size=1024

# =============================================================================
# APPLICATION-SPECIFIC CONFIGURATION
# =============================================================================
app.default.currency=INR
app.default.country=India
app.default.timezone=Asia/Kolkata
app.session.timeout=3600
app.max.login.attempts=3
app.account.lockout.duration=1800

# Production flags
app.enable.demo.data=false
app.enable.debug.endpoints=false
app.enable.swagger=${ENABLE_SWAGGER:false}

# =============================================================================
# MONITORING & ALERTING
# =============================================================================
# Application monitoring
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=production

# Health check configuration
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true

# =============================================================================
# ERROR HANDLING
# =============================================================================
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never
