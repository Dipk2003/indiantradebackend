# =============================================================================
# iTech Backend - Render Environment Configuration
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
server.port=${PORT:10000}
server.address=0.0.0.0
server.servlet.context-path=

# =============================================================================
# DATABASE CONFIGURATION - RENDER (PostgreSQL)
# =============================================================================
# Use environment variables for security in production
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/itech_db}
spring.datasource.username=${JDBC_DATABASE_USERNAME:postgres}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# =============================================================================
# JPA & HIBERNATE CONFIGURATION - RENDER
# =============================================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.defer-datasource-initialization=false

# Caching Configuration - Production Ready
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
# Use Caffeine for application-level caching
spring.cache.type=caffeine
spring.cache.cache-names=users,products,categories
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=300s

# =============================================================================
# CONNECTION POOL CONFIGURATION - RENDER
# =============================================================================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.pool-name=iTech-HikariCP-Render

# =============================================================================
# CORS CONFIGURATION - RENDER
# =============================================================================
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS,HEAD
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# =============================================================================
# LOGGING CONFIGURATION - RENDER
# =============================================================================
logging.level.com.itech.itech_backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.root=INFO
spring.main.banner-mode=off

# =============================================================================
# ACTUATOR CONFIGURATION - RENDER
# =============================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoint.shutdown.enabled=false

# =============================================================================
# JWT CONFIGURATION - RENDER
# =============================================================================
jwt.secret=${JWT_SECRET:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0}
jwt.expiration-in-ms=${JWT_EXPIRATION:86400000}
jwt.refresh-expiration-in-ms=${JWT_REFRESH_EXPIRATION:604800000}

# =============================================================================
# REDIS CONFIGURATION - RENDER (Optional)
# =============================================================================
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=2000ms

# =============================================================================
# EMAIL CONFIGURATION - RENDER
# =============================================================================
spring.mail.host=${EMAIL_HOST:smtp.gmail.com}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME:}
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# =============================================================================
# EXTERNAL SERVICES - RENDER
# =============================================================================
razorpay.key.id=${RAZORPAY_KEY_ID:}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:}
razorpay.currency=INR

# =============================================================================
# OPENAPI/SWAGGER CONFIGURATION
# =============================================================================
openapi.dev-url=http://localhost:8080
openapi.prod-url=https://itech-backend.onrender.com

# =============================================================================
# PERFORMANCE CONFIGURATION - RENDER
# =============================================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Kolkata

# Enable compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
server.compression.min-response-size=1024
