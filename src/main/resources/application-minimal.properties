# =============================================================================
# iTech Backend - Ultra Minimal Configuration for 512MB Render Deployment
# =============================================================================
# This is an extreme memory optimization profile
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION - RENDER OPTIMIZED
# =============================================================================
server.port=${PORT:10000}
server.address=0.0.0.0
server.servlet.context-path=
server.compression.enabled=false

# Render-optimized Tomcat settings for 512MB memory
server.tomcat.threads.max=8
server.tomcat.threads.min-spare=2
server.tomcat.accept-count=5
server.tomcat.max-connections=50
server.tomcat.connection-timeout=20000

# =============================================================================
# DATABASE CONFIGURATION - MINIMAL
# =============================================================================
# Primary database URL - Render auto-populates this
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://dpg-d2val5vdiees73du2i4g-a.oregon-postgres.render.com/helloji_mufl}
spring.datasource.username=${JDBC_DATABASE_USERNAME:helloji_mufl_user}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:defaultpassword}
spring.datasource.driver-class-name=org.postgresql.Driver

# Explicitly set Hibernate dialect to fix the dialect detection issue
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Minimal connection pool
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=0

# =============================================================================
# JPA CONFIGURATION - MINIMAL
# =============================================================================
# PostgreSQL dialect is auto-detected, no need to specify
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# No caching at all
spring.cache.type=none
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# =============================================================================
# LOGGING - MINIMAL
# =============================================================================
logging.level.root=WARN
logging.level.com.itech.itech_backend=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
spring.main.banner-mode=off

# =============================================================================
# ACTUATOR - HEALTH ONLY
# =============================================================================
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never

# =============================================================================
# CORS - BASIC
# =============================================================================
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# =============================================================================
# JWT - BASIC
# =============================================================================
jwt.secret=${JWT_SECRET:minimal-secret-for-render}
jwt.expiration-in-ms=3600000

# =============================================================================
# EMAIL CONFIGURATION - FIXED
# =============================================================================
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.ssl.trust=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST:smtp.gmail.com}

# Disable email simulation for production
email.simulation.enabled=${EMAIL_SIMULATION_ENABLED:false}

# =============================================================================
# EXTREME MEMORY OPTIMIZATIONS FOR 512MB
# =============================================================================
spring.main.lazy-initialization=true
spring.jmx.enabled=false
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# Disable heavy features to save memory
spring.autoconfigure.exclude=\
org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\
org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\
org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\
org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\
org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\
org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration,\
org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration,\
org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\
org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration,\
org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\
org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
