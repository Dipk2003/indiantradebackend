# =============================================================================
# iTech Backend - AWS Production Configuration
# =============================================================================

spring.application.name=itech-backend
spring.profiles.active=aws-production

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
server.port=8080
server.servlet.context-path=

# =============================================================================
# AWS RDS DATABASE CONFIGURATION
# =============================================================================
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:itech_db}?useSSL=true&requireSSL=true&serverTimezone=Asia/Kolkata&allowPublicKeyRetrieval=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${RDS_USERNAME}
spring.datasource.password=${RDS_PASSWORD}

# Connection Pool Settings for Production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# =============================================================================
# JPA & HIBERNATE CONFIGURATION
# =============================================================================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# =============================================================================
# FLYWAY MIGRATION
# =============================================================================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-version=1

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
spring.security.require-ssl=true
security.csrf.enabled=false

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
jwt.secret=${JWT_SECRET}
jwt.expiration-in-ms=86400000
jwt.refresh-expiration-in-ms=604800000

# =============================================================================
# AWS S3 CONFIGURATION
# =============================================================================
aws.s3.bucket=${S3_BUCKET_NAME}
aws.s3.region=${AWS_REGION:ap-south-1}
aws.access.key=${AWS_ACCESS_KEY_ID}
aws.secret.key=${AWS_SECRET_ACCESS_KEY}

# =============================================================================
# REDIS CONFIGURATION (ElastiCache)
# =============================================================================
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=10
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2

# =============================================================================
# ACTUATOR CONFIGURATION
# =============================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
logging.level.com.itech.itech_backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.root=WARN

# CloudWatch Logging
logging.config=classpath:logback-aws.xml

# =============================================================================
# EMAIL CONFIGURATION (AWS SES)
# =============================================================================
spring.mail.host=email-smtp.${AWS_REGION:ap-south-1}.amazonaws.com
spring.mail.port=587
spring.mail.username=${SES_USERNAME}
spring.mail.password=${SES_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# =============================================================================
# RAZORPAY CONFIGURATION
# =============================================================================
razorpay.key.id=${RAZORPAY_KEY_ID}
razorpay.key.secret=${RAZORPAY_KEY_SECRET}

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
spring.web.cors.allowed-origins=${FRONTEND_URL:https://yourdomain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS,HEAD
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=3600000

# =============================================================================
# SSL CONFIGURATION
# =============================================================================
server.ssl.enabled=false
# SSL will be handled by AWS Load Balancer

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.diskspace.enabled=true
