name: Backend CI/CD Pipeline (Fixed)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run Tests
      run: mvn clean test

  build-and-package:
    runs-on: ubuntu-latest
    name: Build and Package
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build JAR
      run: mvn clean package -DskipTests
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    
    - name: Upload JAR to S3 for EB deployment
      run: |
        # Create deployment package name with timestamp
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        JAR_NAME="itech-backend-${TIMESTAMP}.jar"
        
        # Upload to S3
        aws s3 cp target/*.jar s3://elasticbeanstalk-ap-south-1-339713017351/${JAR_NAME}
        echo "JAR uploaded to S3 as ${JAR_NAME}"
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar

  deploy-to-eb:
    runs-on: ubuntu-latest
    name: Deploy to Elastic Beanstalk
    needs: build-and-package
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifact
        path: ./target
    
    - name: Deploy to Elastic Beanstalk
      run: |
        echo "Deployment completed - JAR is ready for manual EB deployment"
        echo "Check S3 bucket: elasticbeanstalk-ap-south-1-339713017351"
        echo "Use AWS Console to deploy the latest JAR to Elastic Beanstalk"
