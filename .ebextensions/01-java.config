option_settings:
  aws:elasticbeanstalk:application:environment:
    PORT: 5000
    SERVER_PORT: 5000
    SPRING_PROFILES_ACTIVE: production
    # Database Configuration - These will be auto-populated when RDS is linked
    # You can also set these manually in EB Console -> Configuration -> Software -> Environment Properties
    # DATABASE_URL: jdbc:postgresql://your-rds-endpoint.ap-south-1.rds.amazonaws.com:5432/indiantrademart
    # JDBC_DATABASE_USERNAME: postgres
    # JDBC_DATABASE_PASSWORD: your-rds-password
    # JWT Configuration
    JWT_SECRET: ITM_PROD_JWT_SECRET_a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0
    JWT_EXPIRATION: 86400000
    # CORS Configuration - Update with your actual frontend domain
    ALLOWED_ORIGINS: https://indiantrademart.com,https://www.indiantrademart.com,https://itm-main-fronted-c4l8.vercel.app
    # Email Configuration
    SPRING_MAIL_HOST: smtp.gmail.com
    SPRING_MAIL_PORT: 587
    SPRING_MAIL_USERNAME: kyc@indiantrademart.com
    SPRING_MAIL_PASSWORD: rgkrfwyecsyhttxa
    SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
    SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
    EMAIL_SIMULATION_ENABLED: false
    # Payment Gateway - REPLACE WITH YOUR ACTUAL VALUES
    RAZORPAY_KEY_ID: your_razorpay_key_id
    RAZORPAY_KEY_SECRET: your_razorpay_key_secret
    RAZORPAY_WEBHOOK_SECRET: your_razorpay_webhook_secret
    # AWS S3 Configuration
    CLOUD_STORAGE_ENABLED: true
    AWS_S3_BUCKET_NAME: indiantrademart-storage
    AWS_S3_REGION: ap-south-1
    # Feature Flags
    GST_MANAGEMENT_ENABLED: true
    GST_VALIDATION_ENABLED: true
    # Logging
    LOGGING_LEVEL_ROOT: INFO
    LOGGING_LEVEL_COM_ITECH: INFO
  aws:elasticbeanstalk:container:java:
    JVMOptions: "-Xmx1024m -Xms512m -server"
  aws:autoscaling:launchconfiguration:
    InstanceType: t3.small
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 3
    Cooldown: 240
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
  aws:elbv2:loadbalancer:
    IdleTimeout: 60
